from ./classes import Backpack, SimpleRecipe, ModelLayer, ModifsLayer, ItemModelLayer, JsonModels, mc_colors_formatted

import ./modelwriters as modelWriters

explorer = Backpack(
    id="explorer",
    translation="ulg.item.backpack.explorer",
    recipe = SimpleRecipe(
        pattern = [
            "###",
            "#S#",
            "###"
        ],
        key = {
            "#": "minecraft:leather",
            "S": "minecraft:string"
        }
    ),
    writeModelsFunc = modelWriters.explorerBackpack,
    model_layers = [
        ModelLayer(
            modifs=ModifsLayer(label="Body", accepts=["dyes"]),
            cmd_index=0,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Top", accepts=["dyes"]),
            cmd_index=1,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Big Pocket", accepts=["dyes"]),
            cmd_index=2,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Right Pocket", accepts=["dyes"]),
            cmd_index=3,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Left Pocket", accepts=["dyes"]),
            cmd_index=4,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Details", accepts=["ores"]),
            cmd_index=5,
            default=[255, 187, 7]
        )
    ],
    item_layers = [
        ItemModelLayer(cmd_index=0, default=[176, 103, 24]),
        ItemModelLayer(cmd_index=1, default=[176, 103, 24]),
        ItemModelLayer(cmd_index=2, default=[176, 103, 24]),
        ItemModelLayer(cmd_index=5, default=[255, 215, 0])
    ],
    direct_transform = {
        "minecraft:emerald": { model:"ulg:backpack/rainbow", clearLayers:true }
    }
)

camping = Backpack(
    id="camping",
    translation="ulg.item.backpack.camping",
    recipe = None,
    writeModelsFunc = modelWriters.campingBackpack,
    model_layers = [
        ModelLayer(
            modifs=ModifsLayer(label="Body", accepts=["dyes"]),
            cmd_index=0,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Stripes", accepts=["dyes"]),
            cmd_index=1,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Big Pocket", accepts=["dyes"]),
            cmd_index=2,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Side Pockets", accepts=["dyes"]),
            cmd_index=3,
            default=[176, 103, 24]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Tent", accepts=["carpets"]),
            cmd_index=4,
            default=[38, 186, 103]
        ),
        ModelLayer(
            modifs=ModifsLayer(label="Details", accepts=["ores"]),
            cmd_index=5,
            default=[255, 187, 7]
        )
    ],
    item_layers = [
        ItemModelLayer(cmd_index=0, default=[176, 103, 24]),
        ItemModelLayer(cmd_index=2, default=[176, 103, 24]),
        ItemModelLayer(cmd_index=4, default=[107, 143, 51]),
        ItemModelLayer(cmd_index=5, default=[255, 215, 0])
    ]
)

rainbow = Backpack(
    id="rainbow",
    translation="ulg.item.backpack.rainbow",
    model_parent="explorer",
    recipe = SimpleRecipe(
        pattern = [
            "###",
            "#S#",
            "###"
        ],
        key = {
            "#": "minecraft:leather",
            "S": "minecraft:emerald"
        }
    ), 
    hasItemModel = True
)

vintage = Backpack(
    id="vintage",
    translation="ulg.item.backpack.vintage",
    hasItemModel = True
)

mouldy = Backpack(
    id="mouldy",
    translation="ulg.item.backpack.mouldy",
    hasItemModel = True
)

def getAll():
    return [explorer, rainbow, camping, vintage, mouldy]

def getRecipes():
    recipes = [(explorer,
        SimpleRecipe(
        id = 'white_explorer',
        pattern = [
            "###",
            "#S#",
            "###"
        ],
        key = {
            "#": "minecraft:leather",
            "S": "minecraft:white_dye"
        }
        ))
    ]
    for item, color in mc_colors_formatted("{color}//minecraft:{color}_carpet").items():
        color_name, carpet = item.split("//")
        recipes.append((camping, SimpleRecipe(
            id=f"camping/{color_name}_tent",
            pattern=[   "##c",
                        "#S#",
                        "## "   ],
            key={"#": "minecraft:leather", "S": "minecraft:string", "c": carpet},
            result_layers=[("Tent", color)]
        )))

    for backpack in getAll():
        if (backpack.recipe):
            backpack.recipe.id = backpack.id
            recipes.append((backpack,backpack.recipe))
    return recipes